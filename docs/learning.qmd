---
title: "Reproducible documents"
author: "Luke, Anders, Ole, & Ziping"
format: html
---

```{r setup}
#| message: false
#| warning: false
library(tidyverse)

# Read raw data
post_meal_data <- read_csv2(here::here("data/post-meal-insulin.csv"))

# Create small dataset
small_post_meal_data <- select(
  post_meal_data,
  id, Age, BMI,
  Group, auc_pg,
  auc_ins, glykemi
)

# Create tidier dataset
tidier_post_meal_data <- small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  ) |>
  filter(glykemi == 0) |>
  select(-glykemi)

# Created tidied dataset
tidied_post_meal_data <- tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR",
      "Control",
      "First-degree relative"
    )
  )
```

## Simple code

```{r}
3 * 3
```

## Showing the data

```{r}
glimpse(post_meal_data)
```

## Plot one continuous variable

```{r}
#| fig-cap: "Distribution of BMI."
#| label: fig-bmi-histo
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

## Plot a discrete variable

```{r discrete-variables}
#| fig-cap: "Distribution of glykemi."
#| label: fig-glykemi-bar
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

## Plot two discrete variables

```{r}
ggplot(post_meal_data, aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```

## Side-by-side plots

```{r side-by-side-figs}
#| label: fig-bmi-glycemia
#| fig-cap: "BMI and glycemia, side by side."
#| fig-subcap:
#|   - "Distribution of BMI."
#|   - "Number of those with glycemia."
#| layout-ncol: 2
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()

ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

## Plotting two continuous variables

```{r}
#| fig-cap: "Scatterplot of BMI and the area under the curve for glucose."
#| label: fig-bmi-auc-pg
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point() +
  geom_smooth()
```

## Pushing changes to remote

## Pulling changes locally

## Selecting data
```{r}
select(post_meal_data, Age)
select(post_meal_data, Age, BMI, Weight)
select(post_meal_data, -Group)
select(post_meal_data, starts_with("PG"))
select(post_meal_data, ends_with("DXA"))
select(post_meal_data, contains("0"))
```

## Renaming specific columns
```{r}
small_post_meal_data |>
  rename(auc_glucose = auc_pg)

small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  )
```

## Filtering data by row
```{r}
small_post_meal_data |>
  filter(glykemi == 1)

small_post_meal_data |>
  filter(BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR")

small_post_meal_data |>
  filter(Group == "CTR", BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR" | BMI >= 25)
```

## Modify a column
```{r}
tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR",
      "Control",
      "First-degree relative"
    )
  )
```

## Visualizing with jitter plot
```{r}
tidied_post_meal_data |>
  mutate(overweight = if_else(BMI >= 25,
    "Overweight",
    "Not overweight"
  )) |>
  ggplot(aes(
    x = overweight,
    y = insulin_glucose_ratio
  )) +
  geom_jitter()
```

## Plotting three or more variables
```{r}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  ggplot(aes(
    x = Age,
    y = auc_insulin,
    colour = Group
  )) +
  geom_point()
```

```{r}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  mutate(young = if_else(Age < 40, "Young", "Old")) |>
  ggplot(aes(
    x = BMI,
    y = insulin_glucose_ratio,
    colour = Group
  )) +
  geom_point() +
  facet_grid(rows = vars(young)) +
  labs(
    x = "Body mass index (BMI)",
    y = "Insulin to glucose ratio"
  )
```

## Calculating summary statistics

```{r}
tidied_post_meal_data |>
  summarise(
    max_bmi = max(BMI),
    min_bmi = min(BMI)
  )
```

## Summarise with splitting

```{r}
#| label: tbl-mean-age-bmi
#| tbl-cap: "Mean values of Age and BMI for each group."
tidied_post_meal_data |>
  group_by(Group) |>
  summarise(
    "Mean Age (yrs)" = round(mean(Age), 1),
    "Mean BMI (kg/m^2)" = round(mean(BMI), 1)
  ) |>
  ungroup() |>
  knitr::kable()
```

See @tbl-mean-age-bmi
